name: build-flow 

on: [push]

env:
  UV_VERSION: "0.8.14"

jobs:
  dependencies:
    runs-on: ubuntu-latest
    steps:
    - name: Install uv
      uses: astral-sh/setup-uv@v6
      with:
          version: ${{ env.UV_VERSION }}
    - uses: actions/checkout@v4
    - name: Restore uv cache
      uses: actions/cache/restore@v4
      with:
        path: ~/.cache/uv
        key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
    
    - name: Install dependencies
      run: |
        uv sync --frozen
    - name: Save uv cache
      uses: actions/cache/save@v4
      if: always()
      with:
        path: .venv
        key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
  pylint:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Restore uv cache
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
      - name: Analysing the code with pylint
        run: |
          uv run pylint $(git ls-files './dea/*.py')
  bandit:
    needs: dependencies
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ env.UV_VERSION }}
      - name: Restore uv cache
        uses: actions/cache/restore@v4
        with:
          path: .venv
          key: uv-${{ runner.os }}-${{ hashFiles('pyproject.toml', 'uv.lock') }}
      - name: Analysing the code with pylint
        run: |
          uv run bandit $(git ls-files './dea/*.py')